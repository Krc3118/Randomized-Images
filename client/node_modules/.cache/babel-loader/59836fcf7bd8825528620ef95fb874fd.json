{"ast":null,"code":"var _jsxFileName = \"/Users/kevincolkitt/Desktop/rb/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst API_KEY = 'b41ebc557f327c6c95cd8ab3ce1b25f6';\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n  React.useEffect(() => {\n    setImages(['2', '10', '20', '25']);\n    loadImages(setImages);\n  }, []);\n  console.log(data);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-center mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Images\"), React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, images.map(image => React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, image))), React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, data));\n}\n\nexport default App;\n\nasync function fetchImagesJson() {\n  const response = await fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&format=json`);\n  const rawJson = await response.text();\n  const imagesJson = JSON.parse(rawJson.slice(14, -1)); // if (response.status !== 200) {\n  //   throw Error(body.message)\n  // }\n\n  return imagesJson;\n}\n\nfunction urlFromProperties(farmId, serverId, id, secret) {\n  return `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secret}.jpg`;\n}\n\nasync function loadImages(setData) {\n  const imagesJson = await fetchImagesJson();\n  console.log(imagesJson.map(item => console.log(item)));\n}","map":{"version":3,"sources":["/Users/kevincolkitt/Desktop/rb/client/src/App.js"],"names":["React","API_KEY","App","images","setImages","useState","useEffect","loadImages","console","log","data","map","image","fetchImagesJson","response","fetch","rawJson","text","imagesJson","JSON","parse","slice","urlFromProperties","farmId","serverId","id","secret","setData","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5B;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpBF,IAAAA,SAAS,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAD,CAAT;AACAG,IAAAA,UAAU,CAACH,SAAD,CAAV;AACD,GAHD,EAGG,EAHH;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,MAAM,CAACQ,GAAP,CAAWC,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CAApB,CAA3B,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,IAAvB,CAHF,CADF;AAOD;;AAED,eAAeR,GAAf;;AAEA,eAAeW,eAAf,GAAiC;AAC/B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gFAA+Ed,OAAQ,cAAzF,CAA5B;AACA,QAAMe,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,KAAR,CAAc,EAAd,EAAkB,CAAC,CAAnB,CAAX,CAAnB,CAJ+B,CAO/B;AACA;AACA;;AACA,SAAOH,UAAP;AACD;;AAGD,SAASI,iBAAT,CAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,EAA7C,EAAiDC,MAAjD,EAAyD;AACvD,SAAQ,eAAcH,MAAO,qBAAoBC,QAAS,IAAGC,EAAG,IAAGC,MAAO,MAA1E;AACD;;AAED,eAAenB,UAAf,CAA0BoB,OAA1B,EAAmC;AACjC,QAAMT,UAAU,GAAG,MAAML,eAAe,EAAxC;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAYS,UAAU,CAACP,GAAX,CAAeiB,IAAI,IAAIpB,OAAO,CAACC,GAAR,CAAYmB,IAAZ,CAAvB,CAAZ;AACD","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst API_KEY = 'b41ebc557f327c6c95cd8ab3ce1b25f6'\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n\n  React.useEffect(() => {\n    setImages(['2', '10', '20', '25'])\n    loadImages(setImages)\n  }, [])\n\n\n\n  console.log(data)\n\n  return (\n    <div className='container'>\n      <div className='row justify-content-center mt-2'>Images</div>\n      <div className='row mt-5'>{images.map(image => <div className='col-2'>{image}</div>)}</div>\n      <div className='mt-5'>{data}</div>\n    </div>\n  );\n}\n\nexport default App;\n\nasync function fetchImagesJson() {\n  const response = await fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&format=json`)\n  const rawJson = await response.text()\n\n  const imagesJson = JSON.parse(rawJson.slice(14, -1))\n\n\n  // if (response.status !== 200) {\n  //   throw Error(body.message)\n  // }\n  return imagesJson;\n}\n\n\nfunction urlFromProperties(farmId, serverId, id, secret) {\n  return `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secret}.jpg`\n}\n\nasync function loadImages(setData) {\n  const imagesJson = await fetchImagesJson()\n\n  console.log(imagesJson.map(item => console.log(item)))\n}\n"]},"metadata":{},"sourceType":"module"}