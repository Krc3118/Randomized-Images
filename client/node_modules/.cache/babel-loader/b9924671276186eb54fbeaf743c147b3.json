{"ast":null,"code":"var _jsxFileName = \"/Users/kevincolkitt/Desktop/rb/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport fetchImageUrls from './imageUtils';\n\nfunction loadImageSources(setImageSources) {\n  fetchImageUrls().then(imageUrls => setImageSources(imageUrls));\n}\n\nfunction App() {\n  const [imageSources, setImageSources] = React.useState([]);\n  React.useEffect(() => {\n    loadImageSources(setImageSources);\n  }, []);\n  const refreshImages = React.useCallback(() => loadImageSources(setImageSources), [setImageSources]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-4 justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Randomized Images\")), React.createElement(\"div\", {\n    className: \"row mt-4 justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-primary\",\n    onClick: refreshImages,\n    disabled: true,\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Refresh\")), React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, imageSources.map(imageSource => React.createElement(\"div\", {\n    className: \"col col-md-3 mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    crossOrigin: \"anonymous\",\n    src: imageSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevincolkitt/Desktop/rb/client/src/App.js"],"names":["React","fetchImageUrls","loadImageSources","setImageSources","then","imageUrls","App","imageSources","useState","useEffect","refreshImages","useCallback","map","imageSource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,cAA3B;;AAEA,SAASC,gBAAT,CAA0BC,eAA1B,EAA2C;AACzCF,EAAAA,cAAc,GAAGG,IAAjB,CAAuBC,SAAD,IAAeF,eAAe,CAACE,SAAD,CAApD;AACD;;AAED,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeJ,eAAf,IAAkCH,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxC;AAEAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBP,IAAAA,gBAAgB,CAACC,eAAD,CAAhB;AACD,GAFD,EAEG,EAFH;AAIA,QAAMO,aAAa,GAAGV,KAAK,CAACW,WAAN,CAAkB,MAAMT,gBAAgB,CAACC,eAAD,CAAxC,EAA2D,CAACA,eAAD,CAA3D,CAAtB;AAGA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,aAAhC;AAA8C,IAAA,OAAO,EAAEO,aAAvD;AAAsE,IAAA,QAAQ,MAA9E;AAA+E,IAAA,OAAO,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,YAAY,CAACK,GAAb,CAAkBC,WAAD,IAAiB;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC;AAAK,IAAA,WAAW,EAAC,WAAjB;AAA6B,IAAA,GAAG,EAAEA,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,CAAlC,CADH,CAPF,CADF,CADF;AAeD;;AAGD,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport fetchImageUrls from './imageUtils';\n\nfunction loadImageSources(setImageSources) {\n  fetchImageUrls().then((imageUrls) => setImageSources(imageUrls));\n}\n\nfunction App() {\n  const [imageSources, setImageSources] = React.useState([]);\n\n  React.useEffect(() => {\n    loadImageSources(setImageSources);\n  }, []);\n\n  const refreshImages = React.useCallback(() => loadImageSources(setImageSources), [setImageSources]);\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row mt-4 justify-content-center\">\n          <h2>Randomized Images</h2>\n        </div>\n        <div className=\"row mt-4 justify-content-center\">\n          <button type=\"submit\" className=\"btn-primary\" onClick={refreshImages} disabled loading>Refresh</button>\n        </div>\n        <div className=\"row mt-4\">\n          {imageSources.map((imageSource) => <div className=\"col col-md-3 mt-4\"><img crossOrigin=\"anonymous\" src={imageSource} /></div>)}\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}