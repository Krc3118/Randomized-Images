{"ast":null,"code":"var _jsxFileName = \"/Users/kevincolkitt/Desktop/rb/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst API_KEY = 'b41ebc557f327c6c95cd8ab3ce1b25f6';\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n  const [data, setData] = React.useState('');\n  React.useEffect(() => {\n    setImages(['2', '10', '20', '25']);\n    fetchImages();\n  }, []);\n  console.log(data);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-center mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Images\"), React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, images.map(image => React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, image))), React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, data));\n}\n\nexport default App;\n\nasync function fetchImages() {\n  const response = await fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&format=json`);\n  const a = response.text().then(data => JSON.parse(data.slice(14, -1))).catch(err => console.log(err)); // const body = await response.json();\n  // if (response.status !== 200) {\n  //   throw Error(body.message)\n  // }\n  // return body;\n}","map":{"version":3,"sources":["/Users/kevincolkitt/Desktop/rb/client/src/App.js"],"names":["React","API_KEY","App","images","setImages","useState","data","setData","useEffect","fetchImages","console","log","map","image","response","fetch","a","text","then","JSON","parse","slice","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB;AACAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,SAAS,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAD,CAAT;AACAK,IAAAA,WAAW;AACZ,GAHD,EAGG,EAHH;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BH,MAAM,CAACS,GAAP,CAAWC,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CAApB,CAA3B,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBP,IAAvB,CAHF,CADF;AAOD;;AAED,eAAeJ,GAAf;;AAEA,eAAeO,WAAf,GAA6B;AAC3B,QAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,gFAA+Ed,OAAQ,cAAzF,CAA5B;AACA,QAAMe,CAAC,GAAGF,QAAQ,CAACG,IAAT,GAAgBC,IAAhB,CAAqBZ,IAAI,IAAIa,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACe,KAAL,CAAW,EAAX,EAAe,CAAC,CAAhB,CAAX,CAA7B,EAA6DC,KAA7D,CAAmEC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAA1E,CAAV,CAF2B,CAK3B;AAGA;AACA;AACA;AACA;AACD","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst API_KEY = 'b41ebc557f327c6c95cd8ab3ce1b25f6'\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n\n  const [data, setData] = React.useState('')\n  React.useEffect(() => {\n    setImages(['2', '10', '20', '25'])\n    fetchImages()\n  }, [])\n\n\n\n  console.log(data)\n\n  return (\n    <div className='container'>\n      <div className='row justify-content-center mt-2'>Images</div>\n      <div className='row mt-5'>{images.map(image => <div className='col-2'>{image}</div>)}</div>\n      <div className='mt-5'>{data}</div>\n    </div>\n  );\n}\n\nexport default App;\n\nasync function fetchImages() {\n  const response = await fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&format=json`)\n  const a = response.text().then(data => JSON.parse(data.slice(14, -1))).catch(err => console.log(err))\n\n\n  // const body = await response.json();\n\n\n  // if (response.status !== 200) {\n  //   throw Error(body.message)\n  // }\n  // return body;\n}\n"]},"metadata":{},"sourceType":"module"}