{"ast":null,"code":"var _jsxFileName = \"/Users/kevincolkitt/Desktop/rb/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst API_KEY = 'b41ebc557f327c6c95cd8ab3ce1b25f6';\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n  React.useEffect(() => {\n    setImages(['2', '10', '20', '25']);\n    fetchImageUrls().then(imageUrls => setImages(imageUrls));\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-center mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Images\"), React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, images.map(image => React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })))));\n}\n\nexport default App;\n\nasync function fetchRawImages() {\n  const response = await fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&format=json`);\n  const rawJson = await response.text();\n  const imagesJson = JSON.parse(rawJson.slice(14, -1));\n  return imagesJson.photos.photo;\n}\n\nfunction urlFromProperties(farmId, serverId, id, secret) {\n  return `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secret}.jpg`;\n}\n\nasync function fetchImageUrls() {\n  const rawImages = await fetchRawImages();\n  return rawImages.map(image => urlFromProperties(image.farm, image.server, image.id, image.secret));\n}","map":{"version":3,"sources":["/Users/kevincolkitt/Desktop/rb/client/src/App.js"],"names":["React","API_KEY","App","images","setImages","useState","useEffect","fetchImageUrls","then","imageUrls","map","image","fetchRawImages","response","fetch","rawJson","text","imagesJson","JSON","parse","slice","photos","photo","urlFromProperties","farmId","serverId","id","secret","rawImages","farm","server"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5B;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpBF,IAAAA,SAAS,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAD,CAAT;AACAG,IAAAA,cAAc,GAAGC,IAAjB,CAAsBC,SAAS,IAAIL,SAAS,CAACK,SAAD,CAA5C;AACD,GAHD,EAGG,EAHH;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,MAAM,CAACO,GAAP,CAAWC,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAApB,CAA3B,CAFF,CADF;AAMD;;AAED,eAAeT,GAAf;;AAEA,eAAeU,cAAf,GAAgC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gFAA+Eb,OAAQ,cAAzF,CAA5B;AACA,QAAMc,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,KAAR,CAAc,EAAd,EAAkB,CAAC,CAAnB,CAAX,CAAnB;AAEA,SAAOH,UAAU,CAACI,MAAX,CAAkBC,KAAzB;AACD;;AAGD,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,EAA7C,EAAiDC,MAAjD,EAAyD;AACvD,SAAQ,eAAcH,MAAO,qBAAoBC,QAAS,IAAGC,EAAG,IAAGC,MAAO,MAA1E;AACD;;AAED,eAAepB,cAAf,GAAgC;AAC9B,QAAMqB,SAAS,GAAG,MAAMhB,cAAc,EAAtC;AAEA,SAAOgB,SAAS,CAAClB,GAAV,CAAcC,KAAK,IAAIY,iBAAiB,CAACZ,KAAK,CAACkB,IAAP,EAAalB,KAAK,CAACmB,MAAnB,EAA2BnB,KAAK,CAACe,EAAjC,EAAqCf,KAAK,CAACgB,MAA3C,CAAxC,CAAP;AACD","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst API_KEY = 'b41ebc557f327c6c95cd8ab3ce1b25f6'\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n\n  React.useEffect(() => {\n    setImages(['2', '10', '20', '25'])\n    fetchImageUrls().then(imageUrls => setImages(imageUrls))\n  }, [])\n\n\n\n  return (\n    <div className='container'>\n      <div className='row justify-content-center mt-2'>Images</div>\n      <div className='row mt-5'>{images.map(image => <div className='col-6'><img src={image}></img></div>)}</div>\n    </div>\n  );\n}\n\nexport default App;\n\nasync function fetchRawImages() {\n  const response = await fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&format=json`)\n  const rawJson = await response.text()\n\n  const imagesJson = JSON.parse(rawJson.slice(14, -1))\n\n  return imagesJson.photos.photo;\n}\n\n\nfunction urlFromProperties(farmId, serverId, id, secret) {\n  return `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secret}.jpg`\n}\n\nasync function fetchImageUrls() {\n  const rawImages = await fetchRawImages()\n\n  return rawImages.map(image => urlFromProperties(image.farm, image.server, image.id, image.secret))\n}\n"]},"metadata":{},"sourceType":"module"}