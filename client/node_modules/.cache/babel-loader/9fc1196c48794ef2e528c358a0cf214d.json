{"ast":null,"code":"var _jsxFileName = \"/Users/kevincolkitt/Desktop/rb/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport fetchImageUrls from './imageUtils';\n\nfunction loadImageSources(setImageSources, setLoading, setFailure) {\n  setLoading(true);\n  fetchImageUrls().then(imageUrls => {\n    setImageSources(imageUrls);\n    setLoading(false);\n    setFailure(false);\n  }).catch(() => {\n    setFailure(true);\n    setLoading(false);\n  });\n}\n\nfunction App() {\n  const [imageSources, setImageSources] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [failure, setFailure] = React.useState(false);\n  React.useEffect(() => {\n    loadImageSources(setImageSources, setLoading, setFailure);\n  }, []);\n  const refreshImages = React.useCallback(() => loadImageSources(setImageSources, setLoading, setFailure), [setImageSources, setLoading, setFailure]);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-4 justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Randomized Images\")), React.createElement(\"div\", {\n    className: \"row mt-4 justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-primary\",\n    onClick: refreshImages,\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, loading ? 'Loading' : 'Refresh')), React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, imageSources.map(imageSource => React.createElement(\"div\", {\n    className: \"col col-md-2 mt-4 mb-3 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: imageSource,\n    crossOrigin: \"anonymous\",\n    src: imageSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))), failure && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sorry, there was an error loading your images. Try again later.\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevincolkitt/Desktop/rb/client/src/App.js"],"names":["React","fetchImageUrls","loadImageSources","setImageSources","setLoading","setFailure","then","imageUrls","catch","App","imageSources","useState","loading","failure","useEffect","refreshImages","useCallback","map","imageSource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,cAA3B;;AAEA,SAASC,gBAAT,CAA0BC,eAA1B,EAA2CC,UAA3C,EAAuDC,UAAvD,EAAmE;AACjED,EAAAA,UAAU,CAAC,IAAD,CAAV;AAEAH,EAAAA,cAAc,GAAGK,IAAjB,CAAuBC,SAAD,IAAe;AACnCJ,IAAAA,eAAe,CAACI,SAAD,CAAf;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD,EAIGG,KAJH,CAIS,MAAM;AACbH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;AAQD;;AAED,SAASK,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeP,eAAf,IAAkCH,KAAK,CAACW,QAAN,CAAe,EAAf,CAAxC;AAEA,QAAM,CAACC,OAAD,EAAUR,UAAV,IAAwBJ,KAAK,CAACW,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACE,OAAD,EAAUR,UAAV,IAAwBL,KAAK,CAACW,QAAN,CAAe,KAAf,CAA9B;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,gBAAgB,CAACC,eAAD,EAAkBC,UAAlB,EAA8BC,UAA9B,CAAhB;AACD,GAFD,EAEG,EAFH;AAIA,QAAMU,aAAa,GAAGf,KAAK,CAACgB,WAAN,CACpB,MAAMd,gBAAgB,CAACC,eAAD,EAAkBC,UAAlB,EAA8BC,UAA9B,CADF,EAEpB,CAACF,eAAD,EAAkBC,UAAlB,EAA8BC,UAA9B,CAFoB,CAAtB;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAEU,aAHX;AAIE,IAAA,QAAQ,EAAEH,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGA,OAAO,GAAG,SAAH,GAAe,SANzB,CADF,CAJF,EAcE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,CAACO,GAAb,CAAkBC,WAAD,IAChB;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEA,WADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,GAAG,EAAEA,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAdF,EAyBGL,OAAO,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,CA1BF,CADF;AAoCD;;AAGD,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport fetchImageUrls from './imageUtils';\n\nfunction loadImageSources(setImageSources, setLoading, setFailure) {\n  setLoading(true);\n\n  fetchImageUrls().then((imageUrls) => {\n    setImageSources(imageUrls);\n    setLoading(false);\n    setFailure(false);\n  }).catch(() => {\n    setFailure(true);\n    setLoading(false);\n  });\n}\n\nfunction App() {\n  const [imageSources, setImageSources] = React.useState([]);\n\n  const [loading, setLoading] = React.useState(false);\n  const [failure, setFailure] = React.useState(false);\n\n  React.useEffect(() => {\n    loadImageSources(setImageSources, setLoading, setFailure);\n  }, []);\n\n  const refreshImages = React.useCallback(\n    () => loadImageSources(setImageSources, setLoading, setFailure),\n    [setImageSources, setLoading, setFailure],\n  );\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-4 justify-content-center\">\n        <h2>Randomized Images</h2>\n      </div>\n      <div className=\"row mt-4 justify-content-center\">\n        <button\n          type=\"submit\"\n          className=\"btn-primary\"\n          onClick={refreshImages}\n          disabled={loading}\n        >\n          {loading ? 'Loading' : 'Refresh'}\n        </button>\n      </div>\n      <div className=\"row mt-4\">\n        {imageSources.map((imageSource) => (\n          <div className=\"col col-md-2 mt-4 mb-3 text-center\">\n            <img\n              alt={imageSource}\n              crossOrigin=\"anonymous\"\n              src={imageSource}\n            />\n          </div>\n        ))}\n      </div>\n      {failure && (\n      <div>\n        <span>\n          Sorry, there was an error loading your images.\n          Try again later.\n        </span>\n      </div>\n      )}\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}